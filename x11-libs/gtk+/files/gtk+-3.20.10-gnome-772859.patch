From 353281d9d07ac49082cf2de19d7de33d5eb2e02d Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Wed, 12 Oct 2016 13:33:39 +0100
Subject: [PATCH] applicationwindow: fix leak of help_overlay

> Due to Gtk+ keeping a reference to the window internally,
> gtk_window_new() does not return a reference to the caller.
> To delete a GtkWindow, call gtk_widget_destroy().

Caller(s) aren't expecting a need to delete help_overlay themselves
once they've installed it.  (E.g. see gtk_application_window_added()).

I didn't notice any direct precedents, but there's a parallel in the
current implementation of gtk_container_destroy() which uses
gtk_widget_destroy() on any added widget.

This avoids leaking 100s of kB per window, when I tested nautilus.

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkapplicationwindow.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/gtk/gtkapplicationwindow.c b/gtk/gtkapplicationwindow.c
index 2128f983c1..3e1e9692b0 100644
--- a/gtk/gtkapplicationwindow.c
+++ b/gtk/gtkapplicationwindow.c
@@ -794,7 +794,12 @@ gtk_application_window_dispose (GObject *object)
 
   g_clear_object (&window->priv->app_menu_section);
   g_clear_object (&window->priv->menubar_section);
-  g_clear_object (&window->priv->help_overlay);
+
+  if (window->priv->help_overlay)
+    {
+      gtk_widget_destroy (GTK_WIDGET (window->priv->help_overlay));
+      g_clear_object (&window->priv->help_overlay);
+    }
 
   G_OBJECT_CLASS (gtk_application_window_parent_class)->dispose (object);
 
@@ -986,6 +991,8 @@ show_help_overlay (GSimpleAction *action,
  * sets up an action with the name win.show-help-overlay to present
  * it.
  *
+ * @window takes resposibility for destroying @help_overlay.
+ *
  * Since: 3.20
  */
 void
@@ -996,8 +1003,7 @@ gtk_application_window_set_help_overlay (GtkApplicationWindow *window,
   g_return_if_fail (help_overlay == NULL || GTK_IS_SHORTCUTS_WINDOW (help_overlay));
 
   if (window->priv->help_overlay)
-    g_signal_handlers_disconnect_by_func (window->priv->help_overlay,
-                                          G_CALLBACK (gtk_widget_hide_on_delete), NULL);
+    gtk_widget_destroy (GTK_WIDGET (window->priv->help_overlay));
   g_set_object (&window->priv->help_overlay, help_overlay);
 
   if (!window->priv->help_overlay)
From 8aa9339b2d7aab7e9c99d46d569f81aa9de7f26f Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Wed, 12 Oct 2016 16:16:57 +0100
Subject: [PATCH] shortcutsgroup: fix leak of title

like previous commit, albeit simpler this time

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkshortcutsgroup.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/gtk/gtkshortcutsgroup.c b/gtk/gtkshortcutsgroup.c
index 9e927158e3..2ea98e81ae 100644
--- a/gtk/gtkshortcutsgroup.c
+++ b/gtk/gtkshortcutsgroup.c
@@ -266,6 +266,24 @@ gtk_shortcuts_group_finalize (GObject *object)
 }
 
 static void
+gtk_shortcuts_group_dispose (GObject *object)
+{
+  GtkShortcutsGroup *self = GTK_SHORTCUTS_GROUP (object);
+
+  /*
+   * Since we overload forall(), the inherited destroy() won't work as normal.
+   * Remove internal widgets ourself.
+   */
+  if (self->title)
+    {
+      gtk_widget_destroy (GTK_WIDGET (self->title));
+      self->title = NULL;
+    }
+
+  G_OBJECT_CLASS (gtk_shortcuts_group_parent_class)->dispose (object);
+}
+
+static void
 gtk_shortcuts_group_class_init (GtkShortcutsGroupClass *klass)
 {
   GObjectClass *object_class = G_OBJECT_CLASS (klass);
@@ -275,6 +293,7 @@ gtk_shortcuts_group_class_init (GtkShortcutsGroupClass *klass)
   object_class->finalize = gtk_shortcuts_group_finalize;
   object_class->get_property = gtk_shortcuts_group_get_property;
   object_class->set_property = gtk_shortcuts_group_set_property;
+  object_class->dispose = gtk_shortcuts_group_dispose;
 
   widget_class->direction_changed = gtk_shortcuts_group_direction_changed;
   container_class->add = gtk_shortcuts_group_add;
From 8ef4f7fd749bec85b2a6ec3602854fd769507c46 Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Wed, 12 Oct 2016 18:03:43 +0100
Subject: [PATCH] headerbar: fix leak of start_box/end_box

gtk_widget_destroy() removes widgets from their container.  However
_internal_ widgets must be unref'ed using gtk_widget_unparent() instead.
This is symmetric with the fact that these widgets were ref'ed by direct
call to gtk_widget_set_parent().  It's also the method that was used in
gtk_headerbar_destroy().

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkheaderbar.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gtk/gtkheaderbar.c b/gtk/gtkheaderbar.c
index 51546754ee..ce67c10ba9 100644
--- a/gtk/gtkheaderbar.c
+++ b/gtk/gtkheaderbar.c
@@ -282,13 +282,13 @@ _gtk_header_bar_update_window_buttons (GtkHeaderBar *bar)
 
   if (priv->titlebar_start_box)
     {
-      gtk_widget_destroy (priv->titlebar_start_box);
+      gtk_widget_unparent (priv->titlebar_start_box);
       priv->titlebar_start_box = NULL;
       priv->titlebar_start_separator = NULL;
     }
   if (priv->titlebar_end_box)
     {
-      gtk_widget_destroy (priv->titlebar_end_box);
+      gtk_widget_unparent (priv->titlebar_end_box);
       priv->titlebar_end_box = NULL;
       priv->titlebar_end_separator = NULL;
     }
From 3731da14a08b0eb1538ed9647a40f5334fb53ada Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Wed, 12 Oct 2016 16:18:47 +0100
Subject: [PATCH] headerbar: fix leak of separator

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkheaderbar.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/gtk/gtkheaderbar.c b/gtk/gtkheaderbar.c
index ce67c10ba9..40f5d3dc65 100644
--- a/gtk/gtkheaderbar.c
+++ b/gtk/gtkheaderbar.c
@@ -340,11 +340,6 @@ _gtk_header_bar_update_window_buttons (GtkHeaderBar *bar)
           gtk_widget_set_no_show_all (separator, TRUE);
           gtk_style_context_add_class (gtk_widget_get_style_context (separator), "titlebutton");
 
-          if (i == 0)
-            priv->titlebar_start_separator = separator;
-          else
-            priv->titlebar_end_separator = separator;
-
           box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, priv->spacing);
 
           for (j = 0; t[j]; j++)
@@ -460,6 +455,7 @@ _gtk_header_bar_update_window_buttons (GtkHeaderBar *bar)
           if (n_children == 0)
             {
               gtk_widget_destroy (box);
+              gtk_widget_destroy (separator);
               continue;
             }
 
@@ -487,9 +483,15 @@ _gtk_header_bar_update_window_buttons (GtkHeaderBar *bar)
           gtk_widget_set_parent (box, GTK_WIDGET (bar));
 
           if (i == 0)
-            priv->titlebar_start_box = box;
+            {
+              priv->titlebar_start_box = box;
+              priv->titlebar_start_separator = separator;
+            }
           else
-            priv->titlebar_end_box = box;
+            {
+              priv->titlebar_end_box = box;
+              priv->titlebar_end_separator = separator;
+            }
         }
       g_strfreev (tokens);
     }
From 982c4a70b614a2b9c4b3d4190a64be9f408f35b5 Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Wed, 12 Oct 2016 16:38:13 +0100
Subject: [PATCH] headerbar: fix leak of label_sizing_box

Since the widget is not added to a container, we have the responsibility
to sink the initial floating reference, and ultimately to unref it.

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkheaderbar.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/gtk/gtkheaderbar.c b/gtk/gtkheaderbar.c
index 40f5d3dc65..e467326e2a 100644
--- a/gtk/gtkheaderbar.c
+++ b/gtk/gtkheaderbar.c
@@ -133,8 +133,9 @@ init_sizing_box (GtkHeaderBar *bar)
    * the real label box with its actual size, to keep it center-aligned
    * in case we have only the title.
    */
-  priv->label_sizing_box = gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
-  gtk_widget_show (priv->label_sizing_box);
+  w = gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
+  gtk_widget_show (w);
+  priv->label_sizing_box = g_object_ref_sink (w);
 
   w = gtk_label_new (NULL);
   gtk_widget_show (w);
@@ -1466,6 +1467,12 @@ gtk_header_bar_destroy (GtkWidget *widget)
 {
   GtkHeaderBarPrivate *priv = gtk_header_bar_get_instance_private (GTK_HEADER_BAR (widget));
 
+  if (priv->label_sizing_box)
+    {
+      gtk_widget_destroy (priv->label_sizing_box);
+      g_clear_object (&priv->label_sizing_box);
+    }
+
   if (priv->custom_title)
     {
       gtk_widget_unparent (priv->custom_title);
From 38667b8dd0413289d6aef58496ea63c3ac7e48af Mon Sep 17 00:00:00 2001
From: Alan Jenkins <alan.christopher.jenkins@gmail.com>
Date: Thu, 13 Oct 2016 09:20:57 +0100
Subject: [PATCH] scrolledwindow: fix leak of pan_gesture

https://bugzilla.gnome.org/show_bug.cgi?id=772859
---
 gtk/gtkscrolledwindow.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/gtk/gtkscrolledwindow.c b/gtk/gtkscrolledwindow.c
index 27d5e7bba8..3392475448 100644
--- a/gtk/gtkscrolledwindow.c
+++ b/gtk/gtkscrolledwindow.c
@@ -2823,6 +2823,7 @@ gtk_scrolled_window_finalize (GObject *object)
   g_clear_object (&priv->drag_gesture);
   g_clear_object (&priv->swipe_gesture);
   g_clear_object (&priv->long_press_gesture);
+  g_clear_object (&priv->pan_gesture);
   g_clear_object (&priv->gadget);
   g_clear_pointer (&priv->scroll_history, (GDestroyNotify) g_array_unref);
 
